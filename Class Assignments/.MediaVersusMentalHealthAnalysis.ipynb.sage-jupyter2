{"args":["--to","cocalc-html"],"start":1657820265674,"state":"done","time":1657820265991,"type":"nbconvert"}
{"backend_state":"running","connection_file":"/projects/9bf569b4-7bd3-4afd-8a92-8da1800f83fc/.local/share/jupyter/runtime/kernel-6cf26c3b-751e-4a9a-b4e5-bb2b55708279.json","kernel":"nlp_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1657807920399,"exec_count":1,"id":"802e90","input":"!pip3 install plotly\n!pip3 install statsmodels","kernel":"nlp_env","output":{"0":{"name":"stdout","text":"Requirement already satisfied: plotly in /usr/local/lib/python3.8/dist-packages (5.6.0)\r\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from plotly) (1.14.0)\r\nRequirement already satisfied: tenacity>=6.2.0 in /usr/local/lib/python3.8/dist-packages (from plotly) (8.0.1)\r\n"},"1":{"name":"stdout","text":"Requirement already satisfied: statsmodels in /projects/9bf569b4-7bd3-4afd-8a92-8da1800f83fc/.local/lib/python3.8/site-packages (0.13.2)\r\n"},"2":{"name":"stdout","text":"Requirement already satisfied: pandas>=0.25 in /usr/local/lib/python3.8/dist-packages (from statsmodels) (1.4.1)\r\nRequirement already satisfied: scipy>=1.3 in /usr/local/lib/python3.8/dist-packages (from statsmodels) (1.8.0)\r\nRequirement already satisfied: patsy>=0.5.2 in /projects/9bf569b4-7bd3-4afd-8a92-8da1800f83fc/.local/lib/python3.8/site-packages (from statsmodels) (0.5.2)\r\n"},"3":{"name":"stdout","text":"Requirement already satisfied: packaging>=21.3 in /projects/9bf569b4-7bd3-4afd-8a92-8da1800f83fc/.local/lib/python3.8/site-packages (from statsmodels) (21.3)\r\nRequirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.8/dist-packages (from statsmodels) (1.22.3)\r\nRequirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.8/dist-packages (from pandas>=0.25->statsmodels) (2.8.2)\r\nRequirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.8/dist-packages (from pandas>=0.25->statsmodels) (2022.1)\r\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from patsy>=0.5.2->statsmodels) (1.14.0)\r\nRequirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/lib/python3/dist-packages (from packaging>=21.3->statsmodels) (2.4.6)\r\n"}},"pos":0,"scrolled":true,"start":1657807913876,"state":"done","type":"cell"}
{"cell_type":"code","end":1657807920793,"exec_count":2,"id":"49fa16","input":"import pandas\n\ndataset = pandas.read_csv('MediaVSMentalHealth.csv')\n\ndataset","kernel":"nlp_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>Age Category</th>\n      <th>Sex:</th>\n      <th>Qualifications</th>\n      <th>Habitat</th>\n      <th>Media use(hrs/day)</th>\n      <th>Media category</th>\n      <th>Well-being score</th>\n      <th>Well-being category</th>\n      <th>anxiety score</th>\n      <th>anxiety category</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>30</td>\n      <td>Young</td>\n      <td>Female</td>\n      <td>PG</td>\n      <td>Urban Municipal Area</td>\n      <td>10</td>\n      <td>High</td>\n      <td>56</td>\n      <td>Middle</td>\n      <td>9</td>\n      <td>Low</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>27</td>\n      <td>Young</td>\n      <td>Male</td>\n      <td>PG</td>\n      <td>Urban Municipal Area</td>\n      <td>8</td>\n      <td>Middle</td>\n      <td>48</td>\n      <td>Middle</td>\n      <td>17</td>\n      <td>Low</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>25</td>\n      <td>Young</td>\n      <td>Male</td>\n      <td>PG</td>\n      <td>Urban Municipal Area</td>\n      <td>11</td>\n      <td>High</td>\n      <td>45</td>\n      <td>Low</td>\n      <td>18</td>\n      <td>Low</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>25</td>\n      <td>Young</td>\n      <td>Male</td>\n      <td>PG</td>\n      <td>Urban Municipal Area</td>\n      <td>12</td>\n      <td>High</td>\n      <td>50</td>\n      <td>Middle</td>\n      <td>12</td>\n      <td>Low</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>22</td>\n      <td>Young</td>\n      <td>Male</td>\n      <td>UG</td>\n      <td>Urban Municipal Area</td>\n      <td>8</td>\n      <td>Middle</td>\n      <td>41</td>\n      <td>Low</td>\n      <td>10</td>\n      <td>Low</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>421</th>\n      <td>24</td>\n      <td>Young</td>\n      <td>Male</td>\n      <td>PG</td>\n      <td>Rural</td>\n      <td>10</td>\n      <td>High</td>\n      <td>49</td>\n      <td>Middle</td>\n      <td>3</td>\n      <td>Low</td>\n    </tr>\n    <tr>\n      <th>422</th>\n      <td>36</td>\n      <td>Young</td>\n      <td>Female</td>\n      <td>PG</td>\n      <td>Urban Municipal Area</td>\n      <td>11</td>\n      <td>High</td>\n      <td>55</td>\n      <td>Middle</td>\n      <td>6</td>\n      <td>Low</td>\n    </tr>\n    <tr>\n      <th>423</th>\n      <td>36</td>\n      <td>Young</td>\n      <td>Male</td>\n      <td>PG</td>\n      <td>Rural</td>\n      <td>6</td>\n      <td>Low</td>\n      <td>55</td>\n      <td>Middle</td>\n      <td>2</td>\n      <td>Low</td>\n    </tr>\n    <tr>\n      <th>424</th>\n      <td>33</td>\n      <td>Young</td>\n      <td>Female</td>\n      <td>PG</td>\n      <td>Metropolitan City</td>\n      <td>9</td>\n      <td>Middle</td>\n      <td>47</td>\n      <td>Middle</td>\n      <td>7</td>\n      <td>Low</td>\n    </tr>\n    <tr>\n      <th>425</th>\n      <td>23</td>\n      <td>Young</td>\n      <td>Male</td>\n      <td>UG</td>\n      <td>Urban Municipal Area</td>\n      <td>15</td>\n      <td>High</td>\n      <td>62</td>\n      <td>High</td>\n      <td>47</td>\n      <td>High</td>\n    </tr>\n  </tbody>\n</table>\n<p>426 rows Ã— 11 columns</p>\n</div>","text/plain":"     Age Age Category   Sex:  Qualifications               Habitat  \\\n0     30        Young  Female             PG  Urban Municipal Area   \n1     27        Young  Male               PG  Urban Municipal Area   \n2     25        Young  Male               PG  Urban Municipal Area   \n3     25        Young  Male               PG  Urban Municipal Area   \n4     22        Young  Male               UG  Urban Municipal Area   \n..   ...          ...     ...            ...                   ...   \n421   24        Young  Male               PG  Rural                  \n422   36        Young  Female             PG  Urban Municipal Area   \n423   36        Young  Male               PG  Rural                  \n424   33        Young  Female             PG  Metropolitan City      \n425   23        Young  Male               UG  Urban Municipal Area   \n\n     Media use(hrs/day) Media category  Well-being score Well-being category  \\\n0                    10           High                56              Middle   \n1                     8         Middle                48              Middle   \n2                    11           High                45                 Low   \n3                    12           High                50              Middle   \n4                     8         Middle                41                 Low   \n..                  ...            ...               ...                 ...   \n421                  10           High                49              Middle   \n422                  11           High                55              Middle   \n423                   6            Low                55              Middle   \n424                   9         Middle                47              Middle   \n425                  15           High                62                High   \n\n     anxiety score anxiety category  \n0                9              Low  \n1               17              Low  \n2               18              Low  \n3               12              Low  \n4               10              Low  \n..             ...              ...  \n421              3              Low  \n422              6              Low  \n423              2              Low  \n424              7              Low  \n425             47             High  \n\n[426 rows x 11 columns]"},"exec_count":2}},"pos":1,"start":1657807920410,"state":"done","type":"cell"}
{"cell_type":"code","end":1657807920803,"exec_count":3,"id":"669ac8","input":"female_dataset = dataset[dataset['Sex: '] == 'Female']\nmale_dataset = dataset[dataset['Sex: '] == 'Male  ']","kernel":"nlp_env","pos":2,"start":1657807920799,"state":"done","type":"cell"}
{"cell_type":"code","end":1657807920814,"exec_count":4,"id":"af0068","input":"dataset['Sex: '].unique()","kernel":"nlp_env","output":{"0":{"data":{"text/plain":"array(['Female', 'Male  '], dtype=object)"},"exec_count":4}},"pos":3,"start":1657807920807,"state":"done","type":"cell"}
{"cell_type":"code","end":1657807923010,"exec_count":5,"id":"616156","input":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\nplt.figure(figsize=(16,12))\nsns.heatmap(data=female_dataset.iloc[:,:].corr(),annot=True,fmt='.2f',cmap='coolwarm')\nplt.show()","kernel":"nlp_env","output":{"0":{"data":{"image/png":"8ce39e356b2f69bacebe1a84a12c8609ddfbb3e1","text/plain":"<Figure size 1152x864 with 2 Axes>"},"metadata":{"needs_background":"light"}}},"pos":4,"start":1657807920819,"state":"done","type":"cell"}
{"cell_type":"code","end":1657807923428,"exec_count":6,"id":"35a75f","input":"plt.figure(figsize=(16,12))\nsns.heatmap(data=male_dataset.iloc[:,:].corr(),annot=True,fmt='.2f',cmap='coolwarm')\nplt.show()","kernel":"nlp_env","output":{"0":{"data":{"image/png":"27311ba4fe04497fa1e63d1e8b097acccf327158","text/plain":"<Figure size 1152x864 with 2 Axes>"},"metadata":{"needs_background":"light"}}},"pos":5,"scrolled":true,"start":1657807923027,"state":"done","type":"cell"}
{"cell_type":"code","end":1657807924560,"exec_count":7,"id":"d3e656","input":"import matplotlib.pyplot as plt\nimport plotly.express\n\nscatter_data = female_dataset[[female_dataset.columns[5], female_dataset.columns[9]]]\n\ngraph_title = f'{female_dataset.columns[5]} versus {female_dataset.columns[9]} for females'\n\nplotly.express.scatter(scatter_data, female_dataset.columns[5], female_dataset.columns[9], trendline = 'ols', title = graph_title)","kernel":"nlp_env","output":{"0":{"data":{"iframe":"87e5b9fbd33bfa1e433c8b8560cf99441e1d1561"}}},"pos":6,"start":1657807923454,"state":"done","type":"cell"}
{"cell_type":"code","end":1657807924709,"exec_count":8,"id":"ef8062","input":"scatter_data = male_dataset[[male_dataset.columns[5], male_dataset.columns[9]]]\n\ngraph_title = f'{male_dataset.columns[5]} versus {male_dataset.columns[9]} for males'\n\nplotly.express.scatter(scatter_data, male_dataset.columns[5], male_dataset.columns[9], trendline = 'ols', title = graph_title)","kernel":"nlp_env","output":{"0":{"data":{"iframe":"85649ca75615dad43f8ab0631f726036275f1fc5"}}},"pos":7,"start":1657807924586,"state":"done","type":"cell"}
{"cell_type":"code","end":1657807924865,"exec_count":9,"id":"3e8a1d","input":"scatter_data = female_dataset[[female_dataset.columns[5], female_dataset.columns[7]]]\n\ngraph_title = f'{female_dataset.columns[5]} versus {female_dataset.columns[7]} for females'\n\nplotly.express.scatter(scatter_data, female_dataset.columns[5], female_dataset.columns[7], trendline = 'ols', title = graph_title)","kernel":"nlp_env","output":{"0":{"data":{"iframe":"1b5237ca3d2a91e8ce5c13dc700d3b75db173afd"}}},"pos":8,"start":1657807924725,"state":"done","type":"cell"}
{"cell_type":"code","end":1657807924978,"exec_count":10,"id":"c2fbe8","input":"scatter_data = male_dataset[[male_dataset.columns[5], male_dataset.columns[7]]]\n\ngraph_title = f'{male_dataset.columns[5]} versus {male_dataset.columns[7]} for males'\n\nplotly.express.scatter(scatter_data, male_dataset.columns[5], male_dataset.columns[7], trendline = 'ols', title = graph_title)","kernel":"nlp_env","output":{"0":{"data":{"iframe":"b71d0483b563d5e2bd680077a4ae8a471c0093ae"}}},"pos":9,"start":1657807924888,"state":"done","type":"cell"}
{"cell_type":"code","end":1657807925244,"exec_count":11,"id":"457255","input":"bar_chart_data = dataset[[dataset.columns[4], dataset.columns[5]]]\n\nbar_chart_data = bar_chart_data.groupby('Habitat').mean()\n\nbar_chart_data['Habitat'] = bar_chart_data.index\n\nplotly.express.bar(bar_chart_data, x = dataset.columns[4], y = dataset.columns[5], color = dataset.columns[5])","kernel":"nlp_env","output":{"0":{"data":{"iframe":"c8c67adbc66fb4c2ef185e7f8a5a37309ad448db"}}},"pos":10,"scrolled":true,"start":1657807925002,"state":"done","type":"cell"}
{"cell_type":"code","end":1657807925279,"exec_count":12,"id":"9c4c45","input":"dataset.corr()","kernel":"nlp_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>Media use(hrs/day)</th>\n      <th>Well-being score</th>\n      <th>anxiety score</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Age</th>\n      <td>1.000000</td>\n      <td>-0.233986</td>\n      <td>0.260147</td>\n      <td>-0.115251</td>\n    </tr>\n    <tr>\n      <th>Media use(hrs/day)</th>\n      <td>-0.233986</td>\n      <td>1.000000</td>\n      <td>-0.165749</td>\n      <td>0.198499</td>\n    </tr>\n    <tr>\n      <th>Well-being score</th>\n      <td>0.260147</td>\n      <td>-0.165749</td>\n      <td>1.000000</td>\n      <td>-0.263366</td>\n    </tr>\n    <tr>\n      <th>anxiety score</th>\n      <td>-0.115251</td>\n      <td>0.198499</td>\n      <td>-0.263366</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"                         Age  Media use(hrs/day)  Well-being score  \\\nAge                 1.000000           -0.233986          0.260147   \nMedia use(hrs/day) -0.233986            1.000000         -0.165749   \nWell-being score    0.260147           -0.165749          1.000000   \nanxiety score      -0.115251            0.198499         -0.263366   \n\n                    anxiety score  \nAge                     -0.115251  \nMedia use(hrs/day)       0.198499  \nWell-being score        -0.263366  \nanxiety score            1.000000  "},"exec_count":12}},"pos":11,"scrolled":true,"start":1657807925251,"state":"done","type":"cell"}
{"cell_type":"code","end":1657807925707,"exec_count":13,"id":"5e5fdd","input":"plt.figure(figsize=(16,12))\nsns.heatmap(data=dataset.iloc[:,:].corr(),annot=True,fmt='.2f',cmap='coolwarm')\nplt.show()","kernel":"nlp_env","output":{"0":{"data":{"image/png":"6ece34be7f8a843ad0392224b8a52ecf7555e1c3","text/plain":"<Figure size 1152x864 with 2 Axes>"},"metadata":{"needs_background":"light"}}},"pos":12,"scrolled":false,"start":1657807925287,"state":"done","type":"cell"}
{"cell_type":"code","end":1657807925843,"exec_count":14,"id":"d894f3","input":"scatter_data = dataset[[dataset.columns[5], dataset.columns[9]]]\n\ngraph_title = f'{dataset.columns[5]} versus {dataset.columns[9]}'\n\nplotly.express.scatter(scatter_data, dataset.columns[5], dataset.columns[9], trendline = 'ols', title = graph_title)","kernel":"nlp_env","output":{"0":{"data":{"iframe":"e696d297ee8b34886cd9468bbce0a37dfa02db26"}}},"pos":13,"start":1657807925717,"state":"done","type":"cell"}
{"cell_type":"code","end":1657807925946,"exec_count":15,"id":"730700","input":"scatter_data = dataset[[dataset.columns[0], dataset.columns[5]]]\n\ngraph_title = f'{dataset.columns[0]} versus {dataset.columns[5]}'\n\nplotly.express.scatter(scatter_data, dataset.columns[0], dataset.columns[5], trendline = 'ols', title = graph_title)","kernel":"nlp_env","output":{"0":{"data":{"iframe":"6343a9f3ff75df7857b707ef7fa3306b9b95d65b"}}},"pos":14,"start":1657807925851,"state":"done","type":"cell"}
{"cell_type":"code","end":1657807926035,"exec_count":16,"id":"570c71","input":"scatter_data = dataset[[dataset.columns[5], dataset.columns[7]]]\n\ngraph_title = f'{dataset.columns[5]} versus {dataset.columns[7]}'\n\nplotly.express.scatter(scatter_data, dataset.columns[5], dataset.columns[7], trendline = 'ols', title = graph_title)","kernel":"nlp_env","output":{"0":{"data":{"iframe":"ee9c2004111e485dd20938e09e3dc86d2cd36792"}}},"pos":15,"start":1657807925964,"state":"done","type":"cell"}
{"cell_type":"code","end":1657807926185,"exec_count":17,"id":"1c6b8c","input":"scatter_data = dataset[[dataset.columns[7], dataset.columns[9]]]\n\ngraph_title = f'{dataset.columns[7]} versus {dataset.columns[9]}'\n\nplotly.express.scatter(scatter_data, dataset.columns[7], dataset.columns[9], trendline = 'ols', title = graph_title)","kernel":"nlp_env","output":{"0":{"data":{"iframe":"87d7ac3d71e5dd75dbac09bea42ed80896965b6e"}}},"pos":16,"start":1657807926045,"state":"done","type":"cell"}
{"cell_type":"code","end":1657807926261,"exec_count":18,"id":"139dda","input":"columns_we_want = [\n    dataset.columns[0],\n    dataset.columns[2],\n    dataset.columns[3],\n    dataset.columns[4],\n    dataset.columns[5],\n    dataset.columns[9],\n    dataset.columns[8],\n]\n\nreduced_dataset = dataset[columns_we_want]\n\nreduced_dataset","kernel":"nlp_env","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>Sex:</th>\n      <th>Qualifications</th>\n      <th>Habitat</th>\n      <th>Media use(hrs/day)</th>\n      <th>anxiety score</th>\n      <th>Well-being category</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>30</td>\n      <td>Female</td>\n      <td>PG</td>\n      <td>Urban Municipal Area</td>\n      <td>10</td>\n      <td>9</td>\n      <td>Middle</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>27</td>\n      <td>Male</td>\n      <td>PG</td>\n      <td>Urban Municipal Area</td>\n      <td>8</td>\n      <td>17</td>\n      <td>Middle</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>25</td>\n      <td>Male</td>\n      <td>PG</td>\n      <td>Urban Municipal Area</td>\n      <td>11</td>\n      <td>18</td>\n      <td>Low</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>25</td>\n      <td>Male</td>\n      <td>PG</td>\n      <td>Urban Municipal Area</td>\n      <td>12</td>\n      <td>12</td>\n      <td>Middle</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>22</td>\n      <td>Male</td>\n      <td>UG</td>\n      <td>Urban Municipal Area</td>\n      <td>8</td>\n      <td>10</td>\n      <td>Low</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>421</th>\n      <td>24</td>\n      <td>Male</td>\n      <td>PG</td>\n      <td>Rural</td>\n      <td>10</td>\n      <td>3</td>\n      <td>Middle</td>\n    </tr>\n    <tr>\n      <th>422</th>\n      <td>36</td>\n      <td>Female</td>\n      <td>PG</td>\n      <td>Urban Municipal Area</td>\n      <td>11</td>\n      <td>6</td>\n      <td>Middle</td>\n    </tr>\n    <tr>\n      <th>423</th>\n      <td>36</td>\n      <td>Male</td>\n      <td>PG</td>\n      <td>Rural</td>\n      <td>6</td>\n      <td>2</td>\n      <td>Middle</td>\n    </tr>\n    <tr>\n      <th>424</th>\n      <td>33</td>\n      <td>Female</td>\n      <td>PG</td>\n      <td>Metropolitan City</td>\n      <td>9</td>\n      <td>7</td>\n      <td>Middle</td>\n    </tr>\n    <tr>\n      <th>425</th>\n      <td>23</td>\n      <td>Male</td>\n      <td>UG</td>\n      <td>Urban Municipal Area</td>\n      <td>15</td>\n      <td>47</td>\n      <td>High</td>\n    </tr>\n  </tbody>\n</table>\n<p>426 rows Ã— 7 columns</p>\n</div>","text/plain":"     Age   Sex:  Qualifications               Habitat  Media use(hrs/day)  \\\n0     30  Female             PG  Urban Municipal Area                  10   \n1     27  Male               PG  Urban Municipal Area                   8   \n2     25  Male               PG  Urban Municipal Area                  11   \n3     25  Male               PG  Urban Municipal Area                  12   \n4     22  Male               UG  Urban Municipal Area                   8   \n..   ...     ...            ...                   ...                 ...   \n421   24  Male               PG  Rural                                 10   \n422   36  Female             PG  Urban Municipal Area                  11   \n423   36  Male               PG  Rural                                  6   \n424   33  Female             PG  Metropolitan City                      9   \n425   23  Male               UG  Urban Municipal Area                  15   \n\n     anxiety score Well-being category  \n0                9              Middle  \n1               17              Middle  \n2               18                 Low  \n3               12              Middle  \n4               10                 Low  \n..             ...                 ...  \n421              3              Middle  \n422              6              Middle  \n423              2              Middle  \n424              7              Middle  \n425             47                High  \n\n[426 rows x 7 columns]"},"exec_count":18}},"pos":17,"start":1657807926223,"state":"done","type":"cell"}
{"cell_type":"code","end":1657807926317,"exec_count":19,"id":"ec85b1","input":"reduced_dataset.info()","kernel":"nlp_env","output":{"0":{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 426 entries, 0 to 425\nData columns (total 7 columns):\n #   Column               Non-Null Count  Dtype \n---  ------               --------------  ----- \n 0   Age                  426 non-null    int64 \n 1   Sex:                 426 non-null    object\n 2   Qualifications       426 non-null    object\n 3   Habitat              426 non-null    object\n 4   Media use(hrs/day)   426 non-null    int64 \n 5   anxiety score        426 non-null    int64 \n 6   Well-being category  426 non-null    object\ndtypes: int64(3), object(4)\nmemory usage: 23.4+ KB\n"}},"pos":18,"start":1657807926267,"state":"done","type":"cell"}
{"cell_type":"code","end":1657807927017,"exec_count":20,"id":"e93890","input":"from sklearn.preprocessing import LabelEncoder\n\nindexes_to_label_encode = [1, 2, 3, 6]\n\nfor i in indexes_to_label_encode:\n    \n    column_name = reduced_dataset.columns[i]\n    encoder = LabelEncoder()\n    \n    reduced_dataset[column_name] = encoder.fit_transform(dataset[column_name])\n    \nreduced_dataset","kernel":"nlp_env","output":{"0":{"name":"stderr","text":"/tmp/ipykernel_807/1627579057.py:10: SettingWithCopyWarning:\n\n\nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n\n"},"1":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>Sex:</th>\n      <th>Qualifications</th>\n      <th>Habitat</th>\n      <th>Media use(hrs/day)</th>\n      <th>anxiety score</th>\n      <th>Well-being category</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>30</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>10</td>\n      <td>9</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>27</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2</td>\n      <td>8</td>\n      <td>17</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>25</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2</td>\n      <td>11</td>\n      <td>18</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>25</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2</td>\n      <td>12</td>\n      <td>12</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>22</td>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n      <td>8</td>\n      <td>10</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>421</th>\n      <td>24</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>10</td>\n      <td>3</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>422</th>\n      <td>36</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>11</td>\n      <td>6</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>423</th>\n      <td>36</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>6</td>\n      <td>2</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>424</th>\n      <td>33</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>9</td>\n      <td>7</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>425</th>\n      <td>23</td>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n      <td>15</td>\n      <td>47</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>426 rows Ã— 7 columns</p>\n</div>","text/plain":"     Age  Sex:   Qualifications  Habitat  Media use(hrs/day)  anxiety score  \\\n0     30      0               0        2                  10              9   \n1     27      1               0        2                   8             17   \n2     25      1               0        2                  11             18   \n3     25      1               0        2                  12             12   \n4     22      1               2        2                   8             10   \n..   ...    ...             ...      ...                 ...            ...   \n421   24      1               0        1                  10              3   \n422   36      0               0        2                  11              6   \n423   36      1               0        1                   6              2   \n424   33      0               0        0                   9              7   \n425   23      1               2        2                  15             47   \n\n     Well-being category  \n0                      2  \n1                      2  \n2                      1  \n3                      2  \n4                      1  \n..                   ...  \n421                    2  \n422                    2  \n423                    2  \n424                    2  \n425                    0  \n\n[426 rows x 7 columns]"},"exec_count":20}},"pos":19,"start":1657807926323,"state":"done","type":"cell"}
{"cell_type":"code","end":1657807927063,"exec_count":21,"id":"58581d","input":"from sklearn.model_selection import train_test_split\n\nx = reduced_dataset.drop(reduced_dataset.columns[6], 1)\ny = reduced_dataset[reduced_dataset.columns[6]]\n\ntrain_x, test_x, train_y, test_y = train_test_split(x, y, test_size = 0.3, random_state = 38)","kernel":"nlp_env","output":{"0":{"name":"stderr","text":"/tmp/ipykernel_807/32460593.py:3: FutureWarning:\n\nIn a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only.\n\n"}},"pos":20,"scrolled":true,"start":1657807927034,"state":"done","type":"cell"}
{"cell_type":"code","end":1657809088818,"exec_count":28,"id":"c08fe2","input":"from sklearn.svm import SVC\nfrom sklearn.metrics import accuracy_score\n\nclassifier = SVC()\nclassifier.fit(train_x, train_y)\n\npredictions = classifier.predict(test_x)\n\nprint(accuracy_score(test_y, predictions))","kernel":"nlp_env","output":{"0":{"name":"stdout","text":"0.453125\n"}},"pos":21,"start":1657809088804,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"0dbc44","input":"## Well-Being Score Compared to Anxiety Score\n<p>To compare the Well-Being Scores to the corresponding Anxiety Scores, we used the plotly module to generate a scatter plot graph to plot Well-Being Scores against Anxiety Scores. We also generated a line of best fit to show the average effect anxiety has on well-being.</p>\n<p>While it does not directly pertain to our hypothesis, we thought it would be interesting and useful to see how big of a factor anxiety was in overall well-being.</p>\n<p>Our data shows that anxiety and overall well-being have a loose inverse correlation. This means that while anxiety does have a negative effect on a personâ€™s well-being, there are other factors that cumulatively affect someoneâ€™s well-being more.</p>","pos":15.5,"type":"cell"}
{"cell_type":"markdown","id":"33578f","input":"## Bar Graph of Different Habitats and Media Usage\n\n<p>We used the pandas module to construct a bar chart, illustrating the average media usage among different locations. We used plotly to express the bar chart, where habitat was the independent variable and media usage was the dependent variable. We then colored the graph by a scale of increasing media usage to better visualize the different media usages across different habitats.</p>\n<p>We wanted to analyze the media usage across different habitats to find out if the habitats people were in had a major factor on the media usage. We thought it would be interesting to compare the average media usage across different types of communities because it would make sense that people would use technology more often in a setting that doesnâ€™t have a lot of activities or places to go to.</p>\n<p>Based on the bar graph, the highest average of media usage was in rural locations, the next-highest average was in Urban Municipal Areas, and the  lowest average was in Metropolitan cities. Although these numbers donâ€™t prove to be very drastic from one another, they do differentiate across locations. Rural areas are usually communities with less buildings, so it would make sense that people tend to rely on social media and technology both for communication and entertainment, where areas like Urban Municipal Areas and especially Metropolitan areas are more condensed for population as well as have more activities and buildings outside of technology.</p>\n\n","pos":9.5,"type":"cell"}
{"cell_type":"markdown","id":"41461c","input":"## Difference in Effects of Social Media on Stress Averages For Different Sexes\n\n<p>We separated the male and female data from the large dataset into two separate datasets. Then using those charts we separately plotted the female and male datasets using plotly. We used Media use in hours per day for the x-axis and anxiety score for the y-axis and on two other plots we used a well-being score on the y-axis instead. We then found the line of best fit for the two plots. We then made two correlation heat maps using seaborn.</p>\n<p>We separately plotted the female and male data to see if a personâ€™s sex had an impact on how social media affected anxiety and well-being scores. We then found the line of best fit for these two plots to determine if there was any difference between the two sexes. This would show if sex had an impact on our hypothesis that media can negatively affect your mental health. We made the correlation charts to see if there were any more differences.</p>\n<p>Our plot maps and lines of best fit showed that there is a positive correlation between media use and a personâ€™s anxiety score, and that a personâ€™s sex does affect the relation between media use and a persons anxiety. We found that the female line of best fit (1.16153*mediause+3.51227) had a steeper slope than male line of best fit (0.840821*mediause+4.34207).</p>\n\n","pos":1.5,"type":"cell"}
{"cell_type":"markdown","id":"4a9cac","input":"## Machine Learning Model\n<p>We created a classification model that would predict a personâ€™s well-being category based on six input features we took from our dataset.</p>\n<p>We thought itâ€™d be interesting to see if we could apply machine learning to this problem of understanding how the environment impacts a personâ€™s well being.</p>\n<p>We used four models: KNN, SVM, Naive Bayes, and Decision Trees. Our models had an average accuracy score of 44%, which seems low but is still better than selecting at random given that there are three output labels.</p>","pos":16.5,"type":"cell"}
{"cell_type":"markdown","id":"5cbec5","input":"## Scatterplot Between Media Usage and Anxiety\n\n<p>We used plotly to create a scatter plot between media usage(x) and anxiety(y).</p>\n<p>We compared the two to see if there was a relationship between social media usage and anxiety.</p>\n<p>The relationship between media usage(x) and anxiety(y) was represented by a line with equation y = 0.93x + 4.38.</p>\n\n","pos":10.5,"type":"cell"}
{"cell_type":"markdown","id":"6a839f","input":"## Scatterplot Comparing Age to Media Usage\n\n<p>Based on data we had collected and stored in a pandas module, we created a plotly scatter plot to compare the age of an individual to their daily media usage.</p>\n<p>During our research stage, a few hypotheses arose that we could test with our data. We wanted to know if media usage went down as age went up, which would be evident in our scatterplot if there was a negative correlation. A Negative correlation occurs when the correlation coefficient is below zero, evident in a downward sloping line.</p>\n<p>The scatter plot showed a weak, but still present negative correlation. The data confirmed that as age goes up, media usage per day usually decreases.</p>\n\n","pos":13.5,"type":"cell"}
{"cell_type":"markdown","id":"6f0093","input":"## Relationship Between Social Media Use and Well Being Score\n\n<p>To find the relationship between Social Media use and a personâ€™s well being score we used plotly to create a scatter plot that compared the two. As well as going more in depth and creating two more scatter plots for male and female data.</p>\n<p>We wanted to to see how the amount of time spent on social media affects a personâ€™s well being score.</p>\n<p>The created scatter plot showed a weak negative correlation between social media use and well being score. The data shows that as the amount of hours spent on social media per day increased, well being score decreased. Also that females well being score was more negatively effected by more time spent on social media then males.</p>\n\n","pos":14.5,"type":"cell"}
{"cell_type":"markdown","id":"897d0b","input":"## Conclusion\n<p>Our findings support our hypothesis. Our data indicates a positive relationship between social media usage and anxiety as well as a negative relationship between social media usage and well being score. In addition, we found that females undergo a greater rate of change in their anxiety levels as they add more social media usage than males.</p>","pos":25,"type":"cell"}
{"cell_type":"markdown","id":"a8b17e","input":"# The Effect of Social Media Use on Mental Health\n\n<p>Our project studied a dataset consisting of attributes such as an individualâ€™s age, education level, social media use, anxiety levels, etc. We wanted to determine to what extent does a personâ€™s social media use impact their anxiety and well being levels.</p>\n<p>Our hypothesis is that if a person uses social media more, their well-being score will go down and their anxiety score will go up.</p>\n\n","pos":-1,"type":"cell"}
{"end":1657809286431,"exec_count":30,"id":"fa794d","input":"from sklearn.neighbors import KNeighborsClassifier\n\nclassifier = KNeighborsClassifier()\nclassifier.fit(train_x, train_y)\n\npredictions = classifier.predict(test_x)\n\nprint(accuracy_score(test_y, predictions))","kernel":"nlp_env","output":{"0":{"name":"stdout","text":"0.453125\n"}},"pos":22,"start":1657809286417,"state":"done","type":"cell"}
{"end":1657809432023,"exec_count":31,"id":"b40e88","input":"from sklearn.naive_bayes import GaussianNB\n\nclassifier = GaussianNB()\nclassifier.fit(train_x, train_y)\n\npredictions = classifier.predict(test_x)\n\nprint(accuracy_score(test_y, predictions))","kernel":"nlp_env","output":{"0":{"name":"stdout","text":"0.4609375\n"}},"pos":23,"start":1657809432004,"state":"done","type":"cell"}
{"end":1657809694646,"exec_count":32,"id":"587ebc","input":"from sklearn.tree import DecisionTreeClassifier\n\nclassifier = DecisionTreeClassifier()\nclassifier.fit(train_x, train_y)\n\npredictions = classifier.predict(test_x)\n\nprint(accuracy_score(test_y, predictions))","kernel":"nlp_env","output":{"0":{"name":"stdout","text":"0.421875\n"}},"pos":24,"start":1657809694619,"state":"done","type":"cell"}
{"id":0,"time":1657819162459,"type":"user"}
{"last_load":1657807413029,"type":"file"}